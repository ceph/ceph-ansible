---
- hosts: rgws
  gather_facts: True
  become: True
  tasks:
    - name: import_role ceph-defaults
      import_role:
        name: ceph-defaults

    - name: import_role ceph-facts
      include_role:
        name: ceph-facts
        tasks_from: "{{ item }}.yml"
      with_items:
        - set_radosgw_address
        - container_binary

    - name: install s3cmd
      package:
        name: s3cmd
        state: present
      register: result
      until: result is succeeded
      when: not containerized_deployment | bool

    - name: generate and upload a random 10Mb file - containerized deployment
      shell: >
        {{ container_binary }} run --rm --name=rgw_multisite_test --entrypoint=bash {{ ceph_docker_registry }}/{{ ceph_docker_image }}:{{ ceph_docker_image_tag }} -c 'dd if=/dev/urandom of=/tmp/testinfra-{{ item.rgw_realm }}.img bs=1M count=10;
        s3cmd --no-ssl --access_key={{ item.system_access_key }} --secret_key={{ item.system_secret_key }} --host={{ item.radosgw_address }}:{{ item.radosgw_frontend_port }} --host-bucket={{ item.radosgw_address }}:{{ item.radosgw_frontend_port }} mb s3://testinfra-{{ item.rgw_realm }};
        s3cmd --no-ssl --access_key={{ item.system_access_key }} --secret_key={{ item.system_secret_key }} --host={{ item.radosgw_address }}:{{ item.radosgw_frontend_port }} --host-bucket={{ item.radosgw_address }}:{{ item.radosgw_frontend_port }} put /tmp/testinfra-{{ item.rgw_realm }}.img s3://testinfra-{{ item.rgw_realm }}'
      with_items: "{{ rgw_instances_host }}"
      when:
        - rgw_zonemaster | bool
        - containerized_deployment | bool

    - name: generate and upload a random a 10Mb file - non containerized
      shell: |
        dd if=/dev/urandom of=/tmp/testinfra-{{ item.rgw_realm }}.img bs=1M count=10;
        s3cmd --no-ssl --access_key={{ item.system_access_key }} --secret_key={{ item.system_secret_key }} --host={{ item.radosgw_address }}:{{ item.radosgw_frontend_port }} --host-bucket={{ item.radosgw_address }}:{{ item.radosgw_frontend_port }} mb s3://testinfra-{{ item.rgw_realm }};
        s3cmd --no-ssl --access_key={{ item.system_access_key }} --secret_key={{ item.system_secret_key }} --host={{ item.radosgw_address }}:{{ item.radosgw_frontend_port }} --host-bucket={{ item.radosgw_address }}:{{ item.radosgw_frontend_port }} put /tmp/testinfra-{{ item.rgw_realm }}.img s3://testinfra-{{ item.rgw_realm }};
      with_items: "{{ rgw_instances_host }}"
      when:
        - rgw_zonemaster | bool
        - not containerized_deployment | bool

    - name: get info from replicated file - containerized deployment
      command: >
        {{ container_binary }} run --rm --name=rgw_multisite_test --entrypoint=s3cmd {{ ceph_docker_registry }}/{{ ceph_docker_image }}:{{ ceph_docker_image_tag }} --no-ssl --access_key={{ item.system_access_key }} --secret_key={{ item.system_secret_key }} --host={{ item.radosgw_address }}:{{ item.radosgw_frontend_port }} --host-bucket={{ item.radosgw_address }}:{{ item.radosgw_frontend_port }} info s3://testinfra-{{ item.rgw_realm }}/testinfra-{{ item.rgw_realm }}.img
      with_items: "{{ rgw_instances_host }}"
      register: result
      retries: 60
      delay: 1
      until: result is succeeded
      when:
        - not rgw_zonemaster | bool
        - containerized_deployment | bool

    - name: get info from replicated file - non containerized
      command: >
        s3cmd --no-ssl --access_key={{ item.system_access_key }} --secret_key={{ item.system_secret_key }} --host={{ item.radosgw_address }}:{{ item.radosgw_frontend_port }} --host-bucket={{ item.radosgw_address }}:{{ item.radosgw_frontend_port }} info s3://testinfra-{{ item.rgw_realm }}/testinfra-{{ item.rgw_realm }}.img
      with_items: "{{ rgw_instances_host }}"
      register: result
      retries: 60
      delay: 1
      until: result is succeeded
      when:
        - not rgw_zonemaster | bool
        - not containerized_deployment | bool
