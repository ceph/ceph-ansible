[tox]
envlist = {jewel,kraken,rhcs}-{ansible2.2}-{xenial_cluster,journal_collocation,centos7_cluster,dmcrypt_journal,dmcrypt_journal_collocation,docker_cluster,purge_cluster,purge_dmcrypt,docker_dedicated_journal,docker_dmcrypt_journal_collocation,update_dmcrypt,update_cluster}
skipsdist = True

# extra commands for purging clusters
# that purge the cluster and then set it up again to
# ensure that a purge can clear nodes well enough that they
# can be redployed to.
[purge]
commands=
  cp {toxinidir}/infrastructure-playbooks/purge-cluster.yml {toxinidir}/purge-cluster.yml
  ansible-playbook -vv -i {changedir}/hosts {toxinidir}/purge-cluster.yml --extra-vars="ireallymeanit=yes fetch_directory={changedir}/fetch"
  # set up the cluster again
  ansible-playbook -vv -i {changedir}/hosts {toxinidir}/site.yml.sample --extra-vars="fetch_directory={changedir}/fetch"
  # test that the cluster can be redeployed in a healthy state
  testinfra -n 4 --sudo -v --connection=ansible --ansible-inventory={changedir}/hosts {toxinidir}/tests/functional/tests

# extra commands for performing a rolling update
# currently this hardcodes the release to kraken
# as we're still installing jewel by default
[update]
commands=
  cp {toxinidir}/infrastructure-playbooks/rolling_update.yml {toxinidir}/rolling_update.yml
  ansible-playbook -vv -i {changedir}/hosts {toxinidir}/rolling_update.yml --extra-vars="ceph_stable_release=kraken ireallymeanit=yes fetch_directory={changedir}/fetch"

  testinfra -n 4 --sudo -v --connection=ansible --ansible-inventory={changedir}/hosts {toxinidir}/tests/functional/tests

[testenv]
whitelist_externals =
    vagrant
    bash
    pip
    cp
passenv=*
setenv=
  ANSIBLE_SSH_ARGS = -F {changedir}/vagrant_ssh_config
  ANSIBLE_ACTION_PLUGINS = {toxinidir}/plugins/actions
  # only available for ansible >= 2.2
  ANSIBLE_STDOUT_CALLBACK = debug
  docker_cluster: PLAYBOOK = site-docker.yml.sample
  docker_dedicated_journal: PLAYBOOK = site-docker.yml.sample
  docker_dmcrypt_journal_collocation: PLAYBOOK = site-docker.yml.sample
  rhcs: CEPH_RHCS = true
  rhcs: CEPH_STABLE = false
  jewel: CEPH_STABLE_RELEASE = jewel
  kraken: CEPH_STABLE_RELEASE = kraken
  kraken: UPDATE_CEPH_STABLE_RELEASE = luminous
deps=
  ansible1.9: ansible==1.9.4
  ansible2.1: ansible==2.1
  ansible2.2: ansible==2.2.1
  -r{toxinidir}/tests/requirements.txt
changedir=
  # tests a 1 mon, 1 osd, 1 mds and 1 rgw xenial cluster using raw_multi_journal OSD scenario
  xenial_cluster: {toxinidir}/tests/functional/ubuntu/16.04/cluster
  # tests a 1 mon 1 osd centos7 cluster using journal_collocation OSD scenario
  journal_collocation: {toxinidir}/tests/functional/centos/7/journal-collocation
  # tests a 1 mon 1 osd centos7 cluster using dmcrypt_dedicated_journal OSD scenario
  dmcrypt_journal: {toxinidir}/tests/functional/centos/7/dmcrypt-dedicated-journal
  # tests a 1 mon 1 osd centos7 cluster using dmcrypt_journal_collocation OSD scenario
  dmcrypt_journal_collocation: {toxinidir}/tests/functional/centos/7/dmcrypt-journal-collocation
  # tests a 1 mon, 1 osd, 1 mds and 1 rgw centos7 cluster using raw_multi_journal OSD scenario
  centos7_cluster: {toxinidir}/tests/functional/centos/7/cluster
  # tests a 1 mon, 1 osd, 1 mds and 1 rgw centos7 cluster using docker
  docker_cluster: {toxinidir}/tests/functional/centos/7/docker-cluster
  purge_cluster: {toxinidir}/tests/functional/ubuntu/16.04/cluster
  purge_dmcrypt: {toxinidir}/tests/functional/centos/7/dmcrypt-dedicated-journal
  update_dmcrypt: {toxinidir}/tests/functional/centos/7/dmcrypt-dedicated-journal
  update_cluster: {toxinidir}/tests/functional/centos/7/cluster
commands=
  vagrant up --no-provision {posargs:--provider=virtualbox}
  bash {toxinidir}/tests/scripts/generate_ssh_config.sh {changedir}

  ansible-playbook -vv -i {changedir}/hosts {toxinidir}/{env:PLAYBOOK:site.yml.sample} --extra-vars="fetch_directory={changedir}/fetch"
  ansible-playbook -vv -i {changedir}/hosts {toxinidir}/tests/functional/setup.yml

  testinfra -n 4 --sudo -v --connection=ansible --ansible-inventory={changedir}/hosts {toxinidir}/tests/functional/tests

  purge_cluster: {[purge]commands}
  purge_dmcrypt: {[purge]commands}
  update_dmcrypt: {[update]commands}
  update_cluster: {[update]commands}

  vagrant destroy --force
