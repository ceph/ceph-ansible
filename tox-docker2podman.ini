[tox]
envlist = centos-container-docker_to_podman

skipsdist = True

[testenv]
whitelist_externals =
    vagrant
    bash
    pip
    sleep
    rm
    cp
passenv=*
sitepackages=True
setenv=
  ANSIBLE_SSH_ARGS = -F {changedir}/vagrant_ssh_config -o ControlMaster=auto -o ControlPersist=600s -o PreferredAuthentications=publickey
  ANSIBLE_CONFIG = {toxinidir}/ansible.cfg
  ANSIBLE_CALLBACK_WHITELIST = profile_tasks
  ANSIBLE_KEEP_REMOTE_FILES = 1
  ANSIBLE_CACHE_PLUGIN = memory
  ANSIBLE_GATHERING = implicit
  # only available for ansible >= 2.5
  ANSIBLE_STDOUT_CALLBACK = yaml
  # Set the vagrant box image to use
  CEPH_ANSIBLE_VAGRANT_BOX = centos/7

deps= -r{toxinidir}/tests/requirements.txt
changedir= {toxinidir}/tests/functional/docker2podman

commands=
  bash {toxinidir}/tests/scripts/vagrant_up.sh --no-provision {posargs:--provider=virtualbox}
  bash {toxinidir}/tests/scripts/generate_ssh_config.sh {changedir}

  ansible-playbook -vv -i {changedir}/hosts {toxinidir}/tests/functional/setup.yml

  ansible-playbook -vv -i {changedir}/hosts {toxinidir}/site-container.yml.sample --extra-vars "\
      delegate_facts_host={env:DELEGATE_FACTS_HOST:True} \
      fetch_directory={env:FETCH_DIRECTORY:{changedir}/fetch} \
      ceph_stable_release={env:CEPH_STABLE_RELEASE:luminous} \
  "

  pip uninstall -y ansible
  pip install ansible==2.10.0a2
  cp {toxinidir}/infrastructure-playbooks/docker-to-podman.yml {toxinidir}/docker-to-podman.yml
  ansible-playbook -vv -i {changedir}/hosts {toxinidir}/docker-to-podman.yml --extra-vars "\
      delegate_facts_host={env:DELEGATE_FACTS_HOST:True} \
      fetch_directory={env:FETCH_DIRECTORY:{changedir}/fetch} \
      ansible_python_interpreter=/usr/bin/python2 \
      ceph_stable_release={env:CEPH_STABLE_RELEASE:luminous} \
  "
  # install podman
  ansible-playbook -vv -i {changedir}/hosts {toxinidir}/tests/functional/docker2podman.yml -e ansible_python_interpreter=/usr/bin/python2

  py.test -n 8 --durations=0 --sudo -v --connection=ansible --ansible-inventory={changedir}/hosts --ssh-config={changedir}/vagrant_ssh_config {toxinidir}/tests/functional/tests
  # reboot machines
  ansible-playbook -i {changedir}/hosts {toxinidir}/tests/functional/reboot.yml
  # wait 120 sec and run tests (there's a chance nodes are still downloading container image after the reboot)
  sleep 120
  bash -c 'IS_PODMAN=TRUE py.test -n 8 --durations=0 --sudo -v --connection=ansible --ansible-inventory={changedir}/hosts --ssh-config={changedir}/vagrant_ssh_config {toxinidir}/tests/functional/tests'

  vagrant destroy -f
