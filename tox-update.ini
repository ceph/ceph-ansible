[tox]
envlist = {centos,ubuntu}-{container,non_container}-update

skipsdist = True

[testenv]
whitelist_externals =
    vagrant
    bash
    cp
    git
    pip
passenv=*
setenv=
  ANSIBLE_SSH_ARGS = -F {changedir}/vagrant_ssh_config -o ControlMaster=auto -o ControlPersist=600s -o PreferredAuthentications=publickey
  ANSIBLE_CONFIG = {toxinidir}/ansible.cfg
  ANSIBLE_ACTION_PLUGINS = {toxinidir}/plugins/actions
  ANSIBLE_CALLBACK_PLUGINS = {toxinidir}/plugins/callback
  ANSIBLE_CALLBACK_WHITELIST = profile_tasks
  ANSIBLE_CACHE_PLUGIN = memory
  ANSIBLE_GATHERING = implicit
  ANSIBLE_STDOUT_CALLBACK = debug
  centos: CEPH_ANSIBLE_VAGRANT_BOX = centos/7
  fedora: CEPH_ANSIBLE_VAGRANT_BOX = fedora/29-atomic-host
  # Set the vagrant box image to use
  centos-non_container: CEPH_ANSIBLE_VAGRANT_BOX = centos/7
  centos-container: CEPH_ANSIBLE_VAGRANT_BOX = centos/atomic-host
  ubuntu: CEPH_ANSIBLE_VAGRANT_BOX = guits/ubuntu-bionic64

  # Set the ansible inventory host file to be used according to which distrib we are running on
  ubuntu: _INVENTORY = hosts-ubuntu
  INVENTORY = {env:_INVENTORY:hosts}
  container: CONTAINER_DIR = /container
  container: PLAYBOOK = site-docker.yml.sample
  non_container: PLAYBOOK = site.yml.sample

  CEPH_DOCKER_IMAGE_TAG = latest-jewel
  CEPH_DOCKER_IMAGE_TAG_BIS = latest-bis-jewel
  UPDATE_CEPH_DOCKER_IMAGE_TAG = latest-luminous
  CEPH_STABLE_RELEASE = jewel
  UPDATE_CEPH_STABLE_RELEASE = luminous
  ROLLING_UPDATE = True

changedir={toxinidir}/tests/functional/all_daemons{env:CONTAINER_DIR:}
commands=

  vagrant up --no-provision {posargs:--provider=virtualbox}
  bash {toxinidir}/tests/scripts/generate_ssh_config.sh {changedir}

  # use the stable-3.1 branch to deploy a jewel cluster
  git clone -b stable-3.1 --single-branch https://github.com/ceph/ceph-ansible.git {envdir}/tmp/ceph-ansible
  pip install -r {envdir}/tmp/ceph-ansible/tests/requirements.txt

  ansible-playbook -vv -i {envdir}/tmp/ceph-ansible/tests/functional/all_daemons{env:CONTAINER_DIR:}/{env:INVENTORY} {envdir}/tmp/ceph-ansible/tests/functional/setup.yml

   # deploy the cluster
  ansible-playbook -vv -i {envdir}/tmp/ceph-ansible/tests/functional/all_daemons{env:CONTAINER_DIR:}/hosts {envdir}/tmp/ceph-ansible/{env:PLAYBOOK:site.yml.sample} --limit 'all:!iscsigws' --extra-vars "\
      delegate_facts_host={env:DELEGATE_FACTS_HOST:True} \
      fetch_directory={env:FETCH_DIRECTORY:{changedir}/fetch} \
      ceph_stable_release={env:CEPH_STABLE_RELEASE:jewel} \
      ceph_docker_registry={env:CEPH_DOCKER_REGISTRY:docker.io} \
      ceph_docker_image={env:CEPH_DOCKER_IMAGE:ceph/daemon} \
      ceph_docker_image_tag={env:CEPH_DOCKER_IMAGE_TAG:latest-jewel} \
      copy_admin_key={env:COPY_ADMIN_KEY:False} \
      mds_max_mds=1 \
  "

  pip install -r {toxinidir}/tests/requirements.txt
  cp {toxinidir}/infrastructure-playbooks/rolling_update.yml {toxinidir}/rolling_update.yml
  ansible-playbook -vv -i {changedir}/{env:INVENTORY} {toxinidir}/rolling_update.yml --extra-vars \
    "\{'ireallymeanit': 'yes', \
      'cluster': 'test', \
      'fetch_directory': '{env:FETCH_DIRECTORY:{changedir}/fetch}', \
      'ceph_stable_release': '{env:UPDATE_CEPH_STABLE_RELEASE:luminous}', \
      'ceph_docker_registry': '{env:CEPH_DOCKER_REGISTRY:docker.io}', \
      'ceph_docker_image': '{env:UPDATE_CEPH_DOCKER_IMAGE:ceph/daemon}', \
      'ceph_docker_image_tag': '{env:UPDATE_CEPH_DOCKER_IMAGE_TAG:latest-luminous}', \
      'devices': [/dev/sda,/dev/sdb], \
      'dedicated_devices': [/dev/sdc,/dev/sdc], \
      'osd_scenario': 'non-collocated' \}"

  bash -c "CEPH_STABLE_RELEASE={env:UPDATE_CEPH_STABLE_RELEASE:luminous} ROLLING_UPDATE=TRUE py.test -n 8 --durations=0 --sudo -v --connection=ansible --ansible-inventory={changedir}/{env:INVENTORY} {toxinidir}/tests/functional/tests"

  vagrant destroy --force