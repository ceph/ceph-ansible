[tox]
envlist = centos-{container,non_container}-update

skipsdist = True

[testenv]
allowlist_externals =
    vagrant
    bash
    git
    pip
    rm
passenv=*
setenv=
  ANSIBLE_SSH_ARGS = -F {changedir}/vagrant_ssh_config -o ControlMaster=auto -o ControlPersist=600s -o PreferredAuthentications=publickey
  ANSIBLE_COLLECTIONS_PATH = {envdir}
  ANSIBLE_CONFIG = {toxinidir}/ansible.cfg
  ANSIBLE_CALLBACK_ENABLED = profile_tasks
  ANSIBLE_CACHE_PLUGIN = memory
  ANSIBLE_GATHERING = implicit
  # only available for ansible >= 2.5
  ANSIBLE_STDOUT_CALLBACK = yaml
#  non_container: DEV_SETUP = True
  # Set the vagrant box image to use
  centos-non_container: CEPH_ANSIBLE_VAGRANT_BOX = centos/stream8
  centos-container: CEPH_ANSIBLE_VAGRANT_BOX = centos/stream8

  INVENTORY = {env:_INVENTORY:hosts}
  container: CONTAINER_DIR = /container
  container: PLAYBOOK = site-container.yml.sample
  non_container: PLAYBOOK = site.yml.sample

  UPDATE_CEPH_DOCKER_IMAGE_TAG = latest-quincy
  ROLLING_UPDATE = True
changedir={toxinidir}/tests/functional/all_daemons{env:CONTAINER_DIR:}
commands=
  bash {toxinidir}/tests/scripts/vagrant_up.sh {changedir} --no-provision {posargs:--provider=virtualbox}
  bash {toxinidir}/tests/scripts/generate_ssh_config.sh {changedir}

  # use the stable-6.0 branch to deploy a pacific cluster
  git clone -b stable-6.0 --single-branch https://github.com/ceph/ceph-ansible.git {envdir}/tmp/ceph-ansible
  pip install -r {envdir}/tmp/ceph-ansible/tests/requirements.txt
  ansible-galaxy collection install -r {envdir}/tmp/ceph-ansible/requirements.yml -v -p {envdir}/ansible_collections


  bash -c 'ANSIBLE_CONFIG={envdir}/tmp/ceph-ansible/ansible.cfg ansible-playbook -vv -i {envdir}/tmp/ceph-ansible/tests/functional/all_daemons{env:CONTAINER_DIR:}/hosts {envdir}/tmp/ceph-ansible/tests/functional/setup.yml'

#  # use the stable-7.0 branch to deploy an octopus cluster
#  git clone -b stable-7.0 --single-branch https://github.com/ceph/ceph-ansible.git {envdir}/tmp/ceph-ansible
#  pip install -r {envdir}/tmp/ceph-ansible/tests/requirements.txt
#  bash -c 'ANSIBLE_CONFIG={envdir}/tmp/ceph-ansible/ansible.cfg ansible-playbook -vv -i {envdir}/tmp/ceph-ansible/tests/functional/all_daemons{env:CONTAINER_DIR:}/hosts {envdir}/tmp/ceph-ansible/tests/functional/setup.yml'
#  # configure lvm, we exclude osd2 given this node uses lvm batch scenario (see corresponding inventory host file)
#  bash -c 'ANSIBLE_CONFIG={envdir}/tmp/ceph-ansible/ansible.cfg ansible-playbook -vv -i {envdir}/tmp/ceph-ansible/tests/functional/all_daemons{env:CONTAINER_DIR:}/hosts {envdir}/tmp/ceph-ansible/tests/functional/lvm_setup.yml --extra-vars "osd_scenario=lvm"'

  # configure lvm, we exclude osd2 given this node uses lvm batch scenario (see corresponding inventory host file)
  bash -c 'ANSIBLE_CONFIG={envdir}/tmp/ceph-ansible/ansible.cfg ansible-playbook -vv -i {envdir}/tmp/ceph-ansible/tests/functional/all_daemons{env:CONTAINER_DIR:}/hosts {envdir}/tmp/ceph-ansible/tests/functional/lvm_setup.yml --extra-vars "osd_scenario=lvm" --limit "osds:!osd2"'

  # deploy the cluster
  # passing ceph_nfs_rgw_access_key and ceph_nfs_rgw_secret_key because of a weird behavior in the CI:
  # When rendering the ganesha.conf.j2 template, it complains because of undefined variables in the block "{% if nfs_obj_gw | bool %}" although we explicitly set this variable to false (see below).
  bash -c 'ANSIBLE_CONFIG={envdir}/tmp/ceph-ansible/ansible.cfg ansible-playbook -vv -i {envdir}/tmp/ceph-ansible/tests/functional/all_daemons{env:CONTAINER_DIR:}/hosts {envdir}/tmp/ceph-ansible/{env:PLAYBOOK:site.yml.sample} --extra-vars "\
      delegate_facts_host={env:DELEGATE_FACTS_HOST:True} \
      ceph_docker_registry={env:CEPH_DOCKER_REGISTRY:quay.io} \
      ceph_docker_image={env:CEPH_DOCKER_IMAGE:ceph/daemon} \
      ceph_docker_image_tag={env:CEPH_DOCKER_IMAGE_TAG:latest-pacific} \
      ceph_docker_registry_auth=True \
      ceph_docker_registry_username={env:DOCKER_HUB_USERNAME} \
      ceph_docker_registry_password={env:DOCKER_HUB_PASSWORD} \
      nfs_file_gw=True \
      nfs_obj_gw=False \
      ceph_nfs_rgw_access_key=fake_access_key \
      ceph_nfs_rgw_secret_key=fake_secret_key \
  "'

  pip uninstall -y ansible
  rm -rf {envdir}/ansible_collections
  ansible-galaxy collection install -r {toxinidir}/requirements.yml -v -p {envdir}/ansible_collections
  pip install -r {toxinidir}/tests/requirements.txt
  ansible-playbook -vv -i {changedir}/{env:INVENTORY} {toxinidir}/infrastructure-playbooks/rolling_update.yml --extra-vars "\
      ireallymeanit=yes \
      ceph_docker_registry_auth=True \
      ceph_docker_registry_username={env:DOCKER_HUB_USERNAME} \
      ceph_docker_registry_password={env:DOCKER_HUB_PASSWORD} \
  "

  bash -c "CEPH_STABLE_RELEASE=quincy py.test --reruns 30 --reruns-delay 2 -n 8 --durations=0 --sudo -v --connection=ansible --ansible-inventory={changedir}/{env:INVENTORY} --ssh-config={changedir}/vagrant_ssh_config {toxinidir}/tests/functional/tests"

  vagrant destroy --force
