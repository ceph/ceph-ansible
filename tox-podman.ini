[tox]
envlist = centos-container-podman

skipsdist = True

[testenv]
whitelist_externals =
    vagrant
    bash
    pip
    sleep
    rm
passenv=*
sitepackages=True
setenv=
  ANSIBLE_SSH_ARGS = -F {changedir}/vagrant_ssh_config -o ControlMaster=auto -o ControlPersist=600s -o PreferredAuthentications=publickey
  ANSIBLE_CONFIG = {toxinidir}/ansible.cfg
  ANSIBLE_CALLBACK_WHITELIST = profile_tasks
  ANSIBLE_KEEP_REMOTE_FILES = 1
  ANSIBLE_CACHE_PLUGIN = memory
  ANSIBLE_GATHERING = implicit
  # only available for ansible >= 2.5
  ANSIBLE_STDOUT_CALLBACK = yaml
  # Set the vagrant box image to use
  CEPH_ANSIBLE_VAGRANT_BOX = centos/8

  # Set the ansible inventory host file to be used according to which distrib we are running on
  INVENTORY = {env:_INVENTORY:hosts}
  PLAYBOOK = site-container.yml.sample
  CEPH_STABLE_RELEASE = nautilus

deps= -r{toxinidir}/tests/requirements.txt
changedir= {toxinidir}/tests/functional/podman

commands=
  bash {toxinidir}/tests/scripts/vagrant_up.sh --no-provision {posargs:--provider=virtualbox}
  bash {toxinidir}/tests/scripts/generate_ssh_config.sh {changedir}

  # configure lvm
  ansible-playbook -vv -i {changedir}/{env:INVENTORY} {toxinidir}/tests/functional/lvm_setup.yml

  ansible-playbook -vv -i {changedir}/{env:INVENTORY} {toxinidir}/tests/functional/setup.yml

  ansible-playbook -vv -i {changedir}/{env:INVENTORY} {toxinidir}/{env:PLAYBOOK:site.yml.sample} --extra-vars "\
      delegate_facts_host={env:DELEGATE_FACTS_HOST:True} \
      fetch_directory={env:FETCH_DIRECTORY:{changedir}/fetch} \
      ceph_docker_registry={env:CEPH_DOCKER_REGISTRY:docker.io} \
      ceph_docker_image={env:CEPH_DOCKER_IMAGE:ceph/daemon} \
      ceph_docker_image_tag={env:CEPH_DOCKER_IMAGE_TAG:latest-master} \
      ceph_docker_registry_auth=True \
      ceph_docker_registry_username={env:DOCKER_HUB_USERNAME} \
      ceph_docker_registry_password={env:DOCKER_HUB_PASSWORD} \
  "

  # wait 30sec for services to be ready
  sleep 30
  # test cluster state using ceph-ansible tests
  py.test --reruns 5 --reruns-delay 1 -n 8 --durations=0 --sudo -v --connection=ansible --ansible-inventory={changedir}/{env:INVENTORY} --ssh-config={changedir}/vagrant_ssh_config {toxinidir}/tests/functional/tests
  # wait 30sec for services to be ready

  # reboot all vms
  ansible-playbook -vv -i {changedir}/{env:INVENTORY} {toxinidir}/tests/functional/reboot.yml

  # wait 30sec for services to be ready
  # retest to ensure cluster came back up correctly after rebooting
  py.test --reruns 5 --reruns-delay 1 -n 8 --durations=0 --sudo -v --connection=ansible --ansible-inventory={changedir}/{env:INVENTORY} --ssh-config={changedir}/vagrant_ssh_config {toxinidir}/tests/functional/tests

  vagrant destroy -f
