- name: tear down existing osd filesystems then logical volumes, volume groups, and physical volumes
  become: true
  hosts: osds

  vars_prompt:
    - name: ireallymeanit
      prompt: Are you sure you want to tear down the logical volumes?
      default: 'no'
      private: no

  tasks:
  - name: exit playbook, if user did not mean to tear down logical volumes
    fail:
      msg: >
        "Exiting lv-teardown playbook, logical volumes were NOT torn down.
         To tear down the logical volumes, either say 'yes' on the prompt or
         or use `-e ireallymeanit=yes` on the command line when
         invoking the playbook"
    when: ireallymeanit != 'yes'

  - name: include vars of lv_vars.yaml
    include_vars:
      file: lv_vars.yaml
    failed_when: false

  # need to check if lvm2 is installed
  - name: install lvm2
    package:
      name: lvm2
      state: present
    register: result
    until: result is succeeded

# BEGIN TEARDOWN
  - name: find any existing osd filesystems
    shell: "grep /var/lib/ceph/osd /proc/mounts | awk '{print $2}'"
    register: old_osd_filesystems

  - name: tear down any existing osd filesystems
    command: "umount -v {{ item }}"
    with_items: "{{ old_osd_filesystems.stdout_lines }}"

  - name: kill all lvm commands that may have been hung
    command: "killall -q lvcreate pvcreate vgcreate lvconvert || echo -n"
    failed_when: false

  - include_role:
      name: ceph-lvm-teardown
    vars:
      nvme_device: "{{ outer.nvme_device | default('dummy')}}"
      hdd_devices: "{{ outer.hdd_devices }}"
      nvme_device_lvs: "{{ outer.nvme_device_lvs }}"
    with_items:
     - "{{ lvm_devices }}"
    loop_control:
      loop_var: outer