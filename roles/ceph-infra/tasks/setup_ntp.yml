---
- name: set ntp service name depending on OS family
  block:
    - name: set ntp service name for Debian family
      set_fact:
        ntp_service_name: ntp
      when: ansible_os_family == 'Debian'
    - name: set ntp service name for Red Hat family
      set_fact:
        ntp_service_name: ntpd
      when: ansible_os_family in ['RedHat', 'Suse']

- name: install ntp packages
  block:
    - name: install ntpd
      when: ntp_daemon_type == "ntpd"
      package:
        name: ntp
        state: present
      register: result
      until: result is succeeded
    - name: install chronyd
      when: ntp_daemon_type == "chronyd"
      package:
        name: chrony
        state: present
      register: result
      until: result is succeeded

- name: add/remove ntp servers
  block:
    - name: remove default ntp servers
      when:
        - ntp_remove_default_servers is defined
        - ntp_remove_default_servers == true
      block:
        - name: remove default ntp servers from ntp.conf
          when: ntp_daemon_type == 'ntpd'
          lineinfile:
            regexp: 'pool\.ntp\.org'
            state: absent
            path: /etc/ntp.conf
        - name: remove default ntp servers from chrony.conf
          when: ntp_daemon_type == 'chronyd'
          lineinfile:
            regexp: 'pool\.ntp\.org'
            state: absent
            path: /etc/chrony.conf

    - name: add ntp servers if provided
      when: ntp_servers is defined
      block:
        - name: add ntp servers for ntp.conf
          when: ntp_daemon_type == 'ntpd'
          lineinfile:
            path: /etc/ntp.conf
            line: 'server {{ item }}'
            insertafter: BOF
          loop: '{{ ntp_servers }}'
        - name: add ntp servers to chrony.conf
          when: ntp_daemon_type == 'chronyd'
          lineinfile:
            path: /etc/chrony.conf
            line: 'server {{ item }}'
            insertafter: BOF
          loop: '{{ ntp_servers }}'

- name: start and enable ntp daemons
  block:
    - name: install and enable timesyncd
      command: timedatectl set-ntp on
      when: ntp_daemon_type == "timesyncd"
      notify:
        - disable ntpd
        - disable chronyd

    - name: disable time sync using timesyncd if we are not using it
      command: timedatectl set-ntp no
      when: ntp_daemon_type != "timesyncd"

    - name: enable and start ntp
      when: ntp_daemon_type == 'ntpd'
      service:
        name: "{{ ntp_service_name }}"
        enabled: yes
        state: started
      notify:
        - disable chronyd
        - disable timesyncd

    - name: enable and start chronyd
      when: ntp_daemon_type == 'chronyd'
      service:
        name: chronyd
        enabled: yes
        state: started
      notify:
        - disable chronyd
        - disable timesyncd
