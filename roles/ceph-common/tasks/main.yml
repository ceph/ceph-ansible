---
- name: Include configure_repository.yml
  ansible.builtin.include_tasks: configure_repository.yml
  tags: package-configure

- name: Include installs/install_redhat_packages.yml
  ansible.builtin.include_tasks: installs/install_redhat_packages.yml
  when:
    - ansible_facts['os_family'] == 'RedHat'
    - (ceph_origin == 'repository' or ceph_origin == 'distro')
  tags: package-install

- name: Include installs/install_suse_packages.yml
  ansible.builtin.include_tasks: installs/install_suse_packages.yml
  when: ansible_facts['os_family'] == 'Suse'
  tags: package-install

- name: Include installs/install_on_debian.yml
  ansible.builtin.include_tasks: installs/install_on_debian.yml
  tags: package-install
  when: ansible_facts['os_family'] == 'Debian'

- name: Include_tasks installs/install_on_clear.yml
  ansible.builtin.include_tasks: installs/install_on_clear.yml
  when: ansible_facts['os_family'] == 'ClearLinux'
  tags: package-install

- name: Get ceph version
  ansible.builtin.command: ceph --version
  changed_when: false
  check_mode: false
  register: ceph_version

- name: Set_fact ceph_version
  ansible.builtin.set_fact:
    ceph_version: "{{ ceph_version.stdout.split(' ')[2] }}"

- name: Set_fact ceph_release - override ceph_release with ceph_stable_release
  ansible.builtin.set_fact:
    ceph_release: "{{ ceph_stable_release }}"
  when:
    - ceph_origin == 'repository'
    - ceph_repository not in ['dev', 'custom']
  tags: always

- name: Include create_rbd_client_dir.yml
  ansible.builtin.include_tasks: create_rbd_client_dir.yml

- name: Include configure_cluster_name.yml
  ansible.builtin.include_tasks: configure_cluster_name.yml

- name: Include configure_memory_allocator.yml
  ansible.builtin.include_tasks: configure_memory_allocator.yml
  when:
    - (ceph_tcmalloc_max_total_thread_cache | int) > 0
    - (ceph_origin == 'repository' or ceph_origin == 'distro')

- name: Include selinux.yml
  ansible.builtin.include_tasks: selinux.yml
  when:
    - ansible_facts['os_family'] == 'RedHat'
    - inventory_hostname in groups.get(nfs_group_name, [])
      or inventory_hostname in groups.get(rgwloadbalancer_group_name, [])
