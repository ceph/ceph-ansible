---
- name: generate cluster fsid
  local_action: shell python -c 'import uuid; print(str(uuid.uuid4()))' | tee {{ fetch_directory }}/ceph_cluster_uuid.conf
    creates="{{ fetch_directory }}/ceph_cluster_uuid.conf"
  register: cluster_uuid
  become: false
  when:
    - generate_fsid
    - ceph_current_fsid.rc != 0

- name: reuse cluster fsid when cluster is already running
  local_action: shell echo {{ fsid }} | tee {{ fetch_directory }}/ceph_cluster_uuid.conf
    creates="{{ fetch_directory }}/ceph_cluster_uuid.conf"
  become: false
  when: ceph_current_fsid.rc == 0

- name: read cluster fsid if it already exists
  local_action: command cat {{ fetch_directory }}/ceph_cluster_uuid.conf
    removes="{{ fetch_directory }}/ceph_cluster_uuid.conf"
  changed_when: false
  register: cluster_uuid
  become: false
  always_run: true
  when: generate_fsid

- name: set fsid fact when generate_fsid = true
  set_fact:
    fsid: "{{ cluster_uuid.stdout }}"
  when: generate_fsid
