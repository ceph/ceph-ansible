---
- name: pool related tasks
  block:
    - name: create openstack pool(s)
      ceph_pool:
        name: "{{ item.name }}"
        cluster: "{{ cluster }}"
        pg_num: "{{ item.pg_num | default(omit) }}"
        pgp_num: "{{ item.pgp_num | default(omit) }}"
        size: "{{ item.size | default(omit) }}"
        min_size: "{{ item.min_size | default(omit) }}"
        pool_type: "{{ item.type | default('replicated') }}"
        rule_name: "{{ item.rule_name | default(omit) }}"
        erasure_profile: "{{ item.erasure_profile | default(omit) }}"
        pg_autoscale_mode: "{{ item.pg_autoscale_mode | default(omit) }}"
        target_size_ratio: "{{ item.target_size_ratio | default(omit) }}"
        application: "{{ item.application | default(omit) }}"
      with_items: "{{ openstack_pools }}"
      delegate_to: "{{ groups[mon_group_name][0] }}"

- name: create openstack cephx key(s)
  block:
    - name: generate keys
      ceph_key:
        name: "{{ item.name }}"
        caps: "{{ item.caps }}"
        secret: "{{ item.key | default('') }}"
        cluster: "{{ cluster }}"
        mode: "{{ item.mode | default(ceph_keyring_permissions) }}"
      with_items: "{{ openstack_keys }}"
      delegate_to: "{{ groups[mon_group_name][0] }}"

    - name: get keys from monitors
      ceph_key:
        name: "{{ item.name }}"
        cluster: "{{ cluster }}"
        output_format: plain
        state: info
      register: _osp_keys
      with_items: "{{ openstack_keys }}"
      delegate_to: "{{ groups.get(mon_group_name)[0] }}"

    - name: copy ceph key(s) if needed
      copy:
        dest: "/etc/ceph/{{ cluster }}.{{ item.0.item.name }}.keyring"
        content: "{{ item.0.stdout + '\n' }}"
        owner: "{{ ceph_uid if containerized_deployment | bool else 'ceph' }}"
        group: "{{ ceph_uid if containerized_deployment | bool else 'ceph' }}"
        mode: "{{ item.0.item.mode | default(ceph_keyring_permissions) }}"
      with_nested:
        - "{{ _osp_keys.results }}"
        - "{{ groups[mon_group_name] }}"
      delegate_to: "{{ item.1 }}"
  when:
    - cephx | bool
    - openstack_config | bool
