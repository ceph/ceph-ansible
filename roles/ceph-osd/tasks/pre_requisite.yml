---
- name: install debian dependencies
  apt:
    pkg: parted
    state: present
  when: ansible_os_family == 'Debian'

- name: enable extras repo for centos
  ini_file:
    dest: /etc/yum.repos.d/CentOS-Base.repo
    section: extras
    option: enabled
    value: 1
  when: ansible_distribution == 'CentOS'

- name: install redhat dependencies via yum
  yum:
    name: parted
    state: present
  when:
    - ansible_os_family == 'RedHat'
    - ansible_pkg_mgr == "yum"

- name: install redhat rependencies via dnf
  dnf:
    name: parted
    state: present
  when:
    - ansible_os_family == 'RedHat'
    - ansible_pkg_mgr == "dnf"

- name: create bootstrap-osd directory
  file:
    path: /var/lib/ceph/bootstrap-osd/
    state: directory
    owner: "{{ dir_owner }}"
    group: "{{ dir_group }}"
    mode: "{{ dir_mode }}"
  when:
    cephx

- name: copy ceph admin key when using dmcrypt
  set_fact:
    copy_admin_key: true
  when:
    - dmcrypt_journal_collocation or dmcrypt_dedicated_journal

- name: copy osd bootstrap key
  copy:
    src: "{{ fetch_directory }}/{{ fsid }}{{ item.name }}"
    dest: "{{ item.name }}"
    owner: "{{ key_owner }}"
    group: "{{ key_group }}"
    mode: "{{ key_mode }}"
  with_items:
    - { name: "/var/lib/ceph/bootstrap-osd/{{ cluster }}.keyring", copy_key: true }
    - { name: "/etc/ceph/{{ cluster }}.client.admin.keyring", copy_key: "{{ copy_admin_key }}" }
  when:
    - cephx
    - item.copy_key|bool

- set_fact:
     osd_uuids: |
      {%- set o=[] %}
      {%- for device in  devices %}
        {%- if o.append( ( inventory_hostname + device + "osd_uuids") | to_uuid ) %}
        {%- endif %}
      {%- endfor %}
      {{ o }}
  when: osd_uuids is not defined

- set_fact:
     journal_uuids: |
      {%- set o=[] %}
      {%- for device in  devices %}
        {%- if o.append( ( inventory_hostname + device + "journal_uuids") | to_uuid ) %}
        {%- endif %}
      {%- endfor %}
      {{ o }}
  when: journal_uuids is not defined
