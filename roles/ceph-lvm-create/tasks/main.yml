# ensure nvme_device is set
- name: fail if nvme_device is not defined
  fail:
    msg: "nvme_device has not been set by the user"
  when: nvme_device is undefined or nvme_device == 'dummy'

# Make entire nvme device a VG
- name: add nvme device as lvm pv
  lvg:
    force: yes
    pvs: "{{ nvme_device }}"
    pesize: 4
    state: present
    vg: "{{ nvme_vg_name }}"

- name: create lvs for fs journals for the bucket index on the nvme device
  lvol:
    lv: "{{ item.journal_name }}"
    vg: "{{ nvme_vg_name }}"
    size: "{{ journal_size }}"
    pvs: "{{ nvme_device }}"
  with_items: "{{ nvme_device_lvs }}"
  when: osd_objectstore == "filestore"

- name: create lvs for fs journals/WAL for hdd devices
  lvol:
    lv: "{{ hdd_journal_prefix }}-{{ item.split('/')[-1] }}"
    vg: "{{ nvme_vg_name }}"
    size: "{{ journal_size }}"
  with_items: "{{ hdd_devices }}"
  when: journal_size > 0

- name: create lvs for fs DB for hdd devices
  lvol:
    lv: "{{ hdd_db_prefix }}-{{ item.split('/')[-1] }}"
    vg: "{{ nvme_vg_name }}"
    size: "{{ db_size }}"
  with_items: "{{ hdd_devices }}"
  when: osd_objectstore == "bluestore"

- name: create the lv for data portion of the bucket index on the nvme device
  lvol:
    lv: "{{ item.lv_name }}"
    vg: "{{ nvme_vg_name }}"
    size: "{{ item.size }}"
    pvs: "{{ nvme_device }}"
  with_items: "{{ nvme_device_lvs }}"

  # Make sure all hdd devices have a unique volume group
- name: create vgs for all hdd devices
  lvg:
    force: yes
    pvs: "{{ item }}"
    pesize: 4
    state: present
    vg: "{{ hdd_vg_prefix }}-{{ item.split('/')[-1] }}"
  with_items: "{{ hdd_devices }}"

- name: create lvs for the data portion on hdd devices
  lvol:
    lv: "{{ hdd_lv_prefix }}-{{ item.split('/')[-1] }}"
    vg: "{{ hdd_vg_prefix }}-{{ item.split('/')[-1] }}"
    size: "{{ hdd_lv_size }}"
    pvs: "{{ item }}"
  with_items: "{{ hdd_devices }}"

- name: "write output for osds.yml to {{ logfile_path }}"
  become: false
  copy:
    content: "{{ logfile }}"
    dest: "{{ logfile_path }}"
  delegate_to: localhost
