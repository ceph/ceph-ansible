---
- name: set_fact container_exec_cmd_nfs
  set_fact:
    container_exec_cmd_nfs: "{{ container_binary }} exec ceph-mon-{{ hostvars[groups[mon_group_name][0]]['ansible_facts']['hostname'] }}"
  when: containerized_deployment | bool

- name: check if "{{ ceph_nfs_rgw_user }}" exists
  command: "{{ container_exec_cmd_nfs | default('') }} radosgw-admin --cluster {{ cluster }} user info --uid={{ ceph_nfs_rgw_user }}"
  run_once: true
  register: rgwuser_exists
  changed_when: false
  failed_when: false
  delegate_to: "{{ groups[mon_group_name][0] }}"
  when: nfs_obj_gw | bool

- name: create rgw nfs user "{{ ceph_nfs_rgw_user }}"
  command: "{{ container_exec_cmd_nfs | default('') }} radosgw-admin --cluster {{ cluster }} user create --uid={{ ceph_nfs_rgw_user }} --display-name='RGW NFS User'"
  run_once: true
  register: rgwuser
  changed_when: false
  delegate_to: "{{ groups[mon_group_name][0] }}"
  when:
    - nfs_obj_gw | bool
    - rgwuser_exists.get('rc', 1) != 0

- name: set_fact ceph_nfs_rgw_access_key
  set_fact:
    ceph_nfs_rgw_access_key: "{{ (rgwuser.stdout | from_json)['keys'][0]['access_key'] if rgwuser_exists.get('rc', 1) != 0 else (rgwuser_exists.stdout | from_json)['keys'][0]['access_key'] }}"
  delegate_to: "{{ groups[mon_group_name][0] }}"
  when:
    - nfs_obj_gw | bool
    - ceph_nfs_rgw_access_key is not defined

- name: set_fact ceph_nfs_rgw_secret_key
  set_fact:
    ceph_nfs_rgw_secret_key: "{{ (rgwuser.stdout | from_json)['keys'][0]['secret_key'] if rgwuser_exists.get('rc', 1) != 0 else (rgwuser_exists.stdout | from_json)['keys'][0]['secret_key'] }}"
  delegate_to: "{{ groups[mon_group_name][0] }}"
  when:
    - nfs_obj_gw | bool
    - ceph_nfs_rgw_secret_key is not defined
