---
- name: include copy_configs.yml
  include_tasks: copy_configs.yml

- name: include start_docker_monitor.yml
  include_tasks: start_docker_monitor.yml

- name: include configure_ceph_command_aliases.yml
  include_tasks: configure_ceph_command_aliases.yml

- name: wait for monitor socket to exist
  command: "{{ docker_exec_cmd }} sh -c 'stat /var/run/ceph/{{ cluster }}-mon.{{ ansible_hostname }}.asok || stat /var/run/ceph/{{ cluster }}-mon.{{ ansible_fqdn }}.asok'"
  changed_when: false
  register: monitor_socket
  retries: 5
  delay: 15
  until: monitor_socket.rc == 0

- name: force peer addition as potential bootstrap peer for cluster bringup
  command: "{{ docker_exec_cmd }} ceph --admin-daemon /var/run/ceph/{{ cluster }}-mon.{{ monitor_name }}.asok add_bootstrap_peer_hint {{ _current_monitor_address }}"
  changed_when: false
  failed_when: false

- name: include fetch_configs.yml
  include_tasks: fetch_configs.yml
  run_once: true

- block:
  - name: create ceph mgr keyring(s) when mon is containerized
    command: "{{ docker_exec_cmd }} ceph --cluster {{ cluster }} auth get-or-create mgr.{{ hostvars[item]['ansible_hostname'] }} mon 'allow profile mgr' osd 'allow *' mds 'allow *' -o /etc/ceph/{{ cluster }}.mgr.{{ hostvars[item]['ansible_hostname'] }}.keyring"
    args:
      creates: "{{ ceph_conf_key_directory }}/{{ cluster }}.mgr.{{ hostvars[item]['ansible_hostname'] }}.keyring"
    changed_when: false
    when:
      - cephx
      - containerized_deployment
      - groups.get(mgr_group_name, []) | length > 0
    with_items: "{{ groups.get(mgr_group_name, []) }}"

  - name: fetch ceph mgr key(s)
    fetch:
      src: "{{ ceph_conf_key_directory }}/{{ cluster }}.mgr.{{ hostvars[item]['ansible_hostname'] }}.keyring"
      dest: "{{ fetch_directory }}/{{ fsid }}/{{ ceph_conf_key_directory }}/{{ cluster }}.mgr.{{ hostvars[item]['ansible_hostname'] }}.keyring"
      flat: yes
    with_items:
      - "{{ groups.get(mgr_group_name, []) }}"
    when:
      - groups.get(mgr_group_name, []) | length > 0

  when:
    - not rolling_update
    - inventory_hostname == groups[mon_group_name]|last
