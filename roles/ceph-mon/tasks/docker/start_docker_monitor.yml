---
- name: populate kv_store with default ceph.conf
  docker:
    name: populate-kv-store
    image: "{{ ceph_mon_docker_username }}/{{ ceph_mon_docker_imagename }}:{{ ceph_mon_docker_image_tag }}"
    command: populate_kvstore
    net: host
    env:
      KV_TYPE: "{{kv_type}}"
      KV_IP: "{{kv_endpoint}}"
      KV_PORT: "{{kv_port}}"
  run_once: true
  when:
    - inventory_hostname == groups.mons[0]
    - mon_containerized_deployment_with_kv
    - mon_containerized_default_ceph_conf_with_kv

- name: populate kv_store with custom ceph.conf
  docker:
    name: populate-kv-store
    image: "{{ ceph_mon_docker_username }}/{{ ceph_mon_docker_imagename }}:{{ ceph_mon_docker_image_tag }}"
    command: populate_kvstore
    net: host
    env:
      KV_TYPE: "{{kv_type}}"
      KV_IP: "{{kv_endpoint}}"
      KV_PORT: "{{kv_port}}"
    volumes:
      - /etc/ceph/{{ cluster }}.conf:/etc/ceph/ceph.defaults
  run_once: true
  when:
    - inventory_hostname == groups.mons[0]
    - mon_containerized_deployment_with_kv
    - not mon_containerized_default_ceph_conf_with_kv

- name: delete populate-kv-store docker
  docker:
    name: populate-kv-store
    state: absent
    image: "{{ ceph_mon_docker_username }}/{{ ceph_mon_docker_imagename }}:{{ ceph_mon_docker_image_tag }}"
  when: mon_containerized_deployment_with_kv

# Use systemd to manage container on Atomic host and CoreOS
- name: generate systemd unit file
  become: true
  template:
    src: "{{ role_path }}/templates/ceph-mon.service.j2"
    dest: "/etc/systemd/system/ceph-mon-{{ cluster }}@.service"
    owner: "root"
    group: "root"
    mode: "0644"
  when:  ansible_os_family == 'RedHat' or ansible_os_family == 'CoreOS'


- name: enable systemd unit file for mon instance
  shell: systemctl enable ceph-mon-{{ cluster }}@{{ ansible_hostname }}.service
  failed_when: false
  changed_when: false
  when: ansible_os_family == 'RedHat' or ansible_os_family == 'CoreOS'

- name: reload systemd unit files
  shell: systemctl daemon-reload
  changed_when: false
  failed_when: false
  when: ansible_os_family == 'RedHat' or ansible_os_family == 'CoreOS'

- name: systemd start mon container
  service:
    name: ceph-mon-{{ cluster }}@{{ ansible_hostname }}
    state: started
    enabled: yes
  changed_when: false
  when: ansible_os_family == 'RedHat' or ansible_os_family == 'CoreOS'

- name: wait for ceph.conf exists
  wait_for:
      path: /etc/ceph/{{ cluster }}.conf
  when: ansible_os_family == 'RedHat'

- name: run the ceph monitor docker image
  docker:
    image: "{{ ceph_mon_docker_username }}/{{ ceph_mon_docker_imagename }}:{{ ceph_mon_docker_image_tag }}"
    name: "{{ ansible_hostname }}"
    net: "host"
    state: "running"
    privileged: "{{ mon_docker_privileged }}"
    env: "MON_IP={{ hostvars[inventory_hostname]['ansible_' + ceph_mon_docker_interface]['ipv4']['address'] }},CEPH_DAEMON=MON,CEPH_PUBLIC_NETWORK={{ ceph_mon_docker_subnet }},CEPH_FSID={{ fsid }},{{ ceph_mon_extra_envs }}"
    volumes: "/var/lib/ceph:/var/lib/ceph,/etc/ceph:/etc/ceph,/etc/localtime:/etc/localtime:ro"
  when:
    - ansible_os_family != 'RedHat'
    - ansible_os_family != 'CoreOS'
    - not mon_containerized_deployment_with_kv

- name: run the ceph monitor docker image with kv
  docker:
    image: "{{ ceph_mon_docker_username }}/{{ ceph_mon_docker_imagename }}:{{ ceph_mon_docker_image_tag }}"
    name: "{{ ansible_hostname }}"
    net: "host"
    state: "running"
    privileged: "{{ mon_docker_privileged }}"
    env: "KV_TYPE={{kv_type}},KV_IP={{kv_endpoint}},MON_IP={{ hostvars[inventory_hostname]['ansible_' + ceph_mon_docker_interface]['ipv4']['address'] }},CEPH_DAEMON=MON,CEPH_PUBLIC_NETWORK={{ ceph_mon_docker_subnet }},{{ ceph_mon_extra_envs }}"
    volumes: "/etc/localtime:/etc/localtime:ro"
  when:
    - ansible_os_family != 'RedHat'
    - ansible_os_family != 'CoreOS'
    - mon_containerized_deployment_with_kv
