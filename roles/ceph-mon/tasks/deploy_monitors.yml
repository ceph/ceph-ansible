---
- name: generate monitor initial keyring
  local_action:
    module: shell
      python -c "import os ; import struct ; import time; import base64 ; key = os.urandom(16) ; header = struct.pack('<hiih',1,int(time.time()),0,len(key)) ; print(base64.b64encode(header + key).decode())" | tee {{ fetch_directory }}/monitor_keyring.conf
    creates: "{{ fetch_directory }}/monitor_keyring.conf"
  register: monitor_keyring
  become: false
  when: cephx

- name: read monitor initial keyring if it already exists
  local_action:
    module: command
      cat {{ fetch_directory }}/monitor_keyring.conf
    removes: "{{ fetch_directory }}/monitor_keyring.conf"
  changed_when: false
  register: monitor_keyring
  become: false
  always_run: true
  when: cephx

- name: create monitor initial keyring
  command: ceph-authtool /var/lib/ceph/tmp/keyring.mon.{{ monitor_name }} --create-keyring --name=mon. --add-key={{ monitor_secret }} --cap mon 'allow *'
  args:
    creates: /var/lib/ceph/tmp/keyring.mon.{{ monitor_name }}
  when: cephx

- name: set initial monitor key permissions
  file:
    path: /var/lib/ceph/tmp/keyring.mon.{{ monitor_name }}
    owner: "ceph"
    group: "ceph"
    mode: "0600"
  when: cephx

- name: create (and fix ownership of) monitor directory
  file:
    path: /var/lib/ceph/mon/{{ cluster }}-{{ monitor_name }}
    state: directory
    owner: "ceph"
    group: "ceph"
    mode: "0755"
    recurse: true

- name: set_fact ceph_authtool_cap >= ceph_release_num.luminous
  set_fact:
    ceph_authtool_cap: "--cap mon 'allow *' --cap osd 'allow *' --cap mds 'allow' --cap mgr 'allow *'"
  when:
    - ceph_release_num.{{ ceph_release }} >= ceph_release_num.luminous
    - cephx
    - admin_secret != 'admin_secret'

- name: set_fact ceph_authtool_cap < ceph_release_num.luminous
  set_fact:
    ceph_authtool_cap: "--cap mon 'allow *' --cap osd 'allow *' --cap mds 'allow'"
  when:
    - ceph_release_num.{{ ceph_release }} < ceph_release_num.luminous
    - cephx
    - admin_secret != 'admin_secret'

- name: create custom admin keyring
  command: "ceph-authtool /etc/ceph/{{ cluster }}.client.admin.keyring --create-keyring --name=client.admin --add-key={{ admin_secret }} --set-uid=0 {{ ceph_authtool_cap }}"
  args:
    creates: /etc/ceph/{{ cluster }}.client.admin.keyring
  register: create_custom_admin_secret
  when:
    - cephx
    - admin_secret != 'admin_secret'

- name: set ownership of admin keyring
  file:
    path: /etc/ceph/{{ cluster }}.client.admin.keyring
    state: file
    owner: 'ceph'
    group: 'ceph'
    mode: '0600'
  when:
    - cephx
    - admin_secret != 'admin_secret'

- name: import admin keyring into mon keyring
  command: ceph-authtool /var/lib/ceph/tmp/keyring.mon.{{ monitor_name }} --import-keyring /etc/ceph/{{ cluster }}.client.admin.keyring
  when:
    - not create_custom_admin_secret.get('skipped')
    - cephx
    - admin_secret != 'admin_secret'

- name: ceph monitor mkfs with keyring
  command: ceph-mon --cluster {{ cluster }} --setuser ceph --setgroup ceph --mkfs -i {{ monitor_name }} --fsid {{ fsid }} --keyring /var/lib/ceph/tmp/keyring.mon.{{ monitor_name }}
  args:
    creates: /var/lib/ceph/mon/{{ cluster }}-{{ monitor_name }}/keyring
  when:
    - cephx

- name: ceph monitor mkfs without keyring
  command: ceph-mon --cluster {{ cluster }} --setuser ceph --setgroup ceph --mkfs -i {{ monitor_name }} --fsid {{ fsid }}
  args:
    creates: /var/lib/ceph/mon/{{ cluster }}-{{ monitor_name }}/store.db
  when:
    - not cephx
