---
- name: generate monitor initial keyring
  local_action: shell python -c "import os ; import struct ; import time; import base64 ; key = os.urandom(16) ; header = struct.pack('<hiih',1,int(time.time()),0,len(key)) ; print base64.b64encode(header + key)" | tee {{ fetch_directory }}/monitor_keyring.conf
    creates={{ fetch_directory }}/monitor_keyring.conf
  register: monitor_keyring
  become: false

- name: read monitor initial keyring if it already exists
  local_action: command cat {{ fetch_directory }}/monitor_keyring.conf
    removes={{ fetch_directory }}/monitor_keyring.conf
  changed_when: false
  register: monitor_keyring
  become: false

- name: create monitor initial keyring
  command: ceph-authtool /var/lib/ceph/tmp/keyring.mon.{{ ansible_hostname }} --create-keyring --name=mon. --add-key={{ monitor_secret }} --cap mon 'allow *'
  args:
    creates: /var/lib/ceph/tmp/keyring.mon.{{ ansible_hostname }}

- name: set initial monitor key permissions
  file:
    path: /var/lib/ceph/tmp/keyring.mon.{{ ansible_hostname }}
    mode: "{{ key_mode }}"
    owner: "{{ key_owner }}"
    group: "{{ key_group }}"

- name: create monitor directory
  file:
    path: /var/lib/ceph/mon/ceph-{{ ansible_hostname }}
    state: directory
    owner: "{{ dir_owner }}"
    group: "{{ dir_group }}"
    mode: "{{ dir_mode }}"

- name: ceph monitor mkfs (for or after infernalis release)
  command: ceph-mon --setuser ceph --setgroup ceph --mkfs -i {{ ansible_hostname }} --fsid {{ fsid }} --keyring /var/lib/ceph/tmp/keyring.mon.{{ ansible_hostname }}
  args:
    creates: /var/lib/ceph/mon/ceph-{{ ansible_hostname }}/keyring
  when: is_ceph_infernalis

- name: ceph monitor mkfs (before infernalis release)
  command: ceph-mon --mkfs -i {{ ansible_hostname }} --fsid {{ fsid }} --keyring /var/lib/ceph/tmp/keyring.mon.{{ ansible_hostname }}
  args:
    creates: /var/lib/ceph/mon/ceph-{{ ansible_hostname }}/keyring
  when: not is_ceph_infernalis
