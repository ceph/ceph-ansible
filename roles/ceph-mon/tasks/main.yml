---
- name: Set_fact container_exec_cmd
  ansible.builtin.set_fact:
    container_exec_cmd: "{{ container_binary }} exec ceph-mon-{{ ansible_facts['hostname'] }}"
  when: containerized_deployment | bool

- name: Include deploy_monitors.yml
  ansible.builtin.include_tasks: deploy_monitors.yml
  when:
    # we test for both container and non-container
    - (mon_socket is defined and mon_socket.get('rc') != 0) or (ceph_mon_container_stat is defined and ceph_mon_container_stat.get('stdout_lines', [])|length == 0)
    - not switch_to_containers | default(False) | bool

- name: Include start_monitor.yml
  ansible.builtin.include_tasks: start_monitor.yml

- name: Include_tasks ceph_keys.yml
  ansible.builtin.include_tasks: ceph_keys.yml
  when: not switch_to_containers | default(False) | bool

- name: Include secure_cluster.yml
  ansible.builtin.include_tasks: secure_cluster.yml
  when:
    - secure_cluster | bool
    - inventory_hostname == groups[mon_group_name] | first

- name: Set cluster configs
  ceph_config:
    action: set
    who: "{{ item.0.key }}"
    option: "{{ item.1.key }}"
    value: "{{ item.1.value }}"
  run_once: true
  when:
    - item.1.value != omit
  loop: "{{ ceph_cluster_conf | dict2dict }}"
  environment:
    CEPH_CONTAINER_IMAGE: "{{ ceph_docker_registry + '/' + ceph_docker_image + ':' + ceph_docker_image_tag if containerized_deployment | bool else None }}"
    CEPH_CONTAINER_BINARY: "{{ container_binary }}"
