---
- name: create rados gateway directories
  file: >
    path={{ item }}
    state=directory
    owner=root
    group=root
    mode=0644
  with_items:
    - /var/lib/ceph/bootstrap-rgw
    - /var/lib/ceph/radosgw/{{ cluster }}-rgw.{{ ansible_hostname }}

- name: copy rados gateway bootstrap key
  copy: >
    src=fetch/{{ fsid }}/var/lib/ceph/bootstrap-rgw/{{ cluster }}.keyring
    dest=/var/lib/ceph/bootstrap-rgw/{{ cluster }}.keyring
    owner=root
    group=root
    mode=600
  when: cephx

- name: create rados gateway keyring
  command: >
    ceph --cluster {{ cluster }} --name client.bootstrap-rgw --keyring /var/lib/ceph/bootstrap-rgw/{{ cluster }}.keyring auth get-or-create client.rgw.{{ ansible_hostname }} osd 'allow rwx' mon 'allow rw' -o /var/lib/ceph/radosgw/{{ cluster }}-rgw.{{ ansible_hostname }}/keyring
    creates=/var/lib/ceph/radosgw/{{ cluster }}-rgw.{{ ansible_hostname }}/keyring
  changed_when: false
  when: cephx

- name: set rados gateway key permissions
  file: >
    path=/var/lib/ceph/radosgw/{{ cluster }}-rgw.{{ ansible_hostname }}/keyring
    mode=0600
    owner=root
    group=root
  when: cephx

- name: activate rados gateway with upstart
  file: >
    path=/var/lib/ceph/radosgw/{{ cluster }}-rgw.{{ ansible_hostname }}/{{ item }}
    state=touch
    owner=root
    group=root
    mode=0644
  with_items:
    - done
    - upstart
  changed_when: false
  when: ansible_distribution == "Ubuntu"

- name: activate rados gateway with sysvinit
  file: >
    path=/var/lib/ceph/radosgw/{{ cluster }}-rgw.{{ ansible_hostname }}/{{ item }}
    state=touch
    owner=root
    group=root
    mode=0644
  with_items:
    - done
    - sysvinit
  changed_when: false
  when: ansible_distribution != "Ubuntu"

- name: generate rados gateway sudoers file
  template: >
    src=ceph.j2
    dest=/etc/sudoers.d/ceph
    owner=root
    group=root
    mode=0400
  when: ansible_distribution != "Ubuntu"
