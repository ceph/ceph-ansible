---
- name: install ceph mds for debian
  apt:
    name: ceph-mds
    state: "{{ (upgrade_ceph_packages|bool) | ternary('latest','present') }}"
    default_release: "{{ ceph_stable_release_uca | default('') if ceph_origin == 'repository' and ceph_repository == 'uca' else '' }}{{ ansible_distribution_release ~ '-backports' if ceph_origin == 'distro' and ceph_use_distro_backports | bool else '' }}"
  when:
    - mds_group_name in group_names
    - ansible_os_family == 'Debian'
  register: result
  until: result is succeeded

- name: install ceph-mds package on redhat or SUSE/openSUSE
  package:
    name: "ceph-mds"
    state: "{{ (upgrade_ceph_packages|bool) | ternary('latest','present') }}"
  register: result
  until: result is succeeded
  when:
    - mds_group_name in group_names
    - ansible_os_family in ['Suse', 'RedHat']

- name: create mds keyring
  ceph_key:
    name: "mds.{{ ansible_hostname }}"
    cluster: "{{ cluster }}"
    user: client.bootstrap-mds
    user_key: "/var/lib/ceph/bootstrap-mds/{{ cluster }}.keyring"
    caps:
      mon: "allow profile mds"
      mds: "allow"
      osd: "allow rwx"
    dest: "/var/lib/ceph/mds/{{ cluster }}-{{ ansible_hostname }}/keyring"
    import_key: false
    owner: ceph
    group: ceph
    mode: "{{ ceph_keyring_permissions }}"
  when: cephx | bool

- name: ensure systemd service override directory exists
  file:
    state: directory
    path: "/etc/systemd/system/ceph-mds@.service.d/"
  when:
    - ceph_mds_systemd_overrides is defined
    - ansible_service_mgr == 'systemd'

- name: add ceph-mds systemd service overrides
  config_template:
    src: "ceph-mds.service.d-overrides.j2"
    dest: "/etc/systemd/system/ceph-mds@.service.d/ceph-mds-systemd-overrides.conf"
    config_overrides: "{{ ceph_mds_systemd_overrides | default({}) }}"
    config_type: "ini"
  when:
    - ceph_mds_systemd_overrides is defined
    - ansible_service_mgr == 'systemd'

- name: start and add that the metadata service to the init sequence
  service:
    name: ceph-mds@{{ ansible_hostname }}
    state: started
    enabled: yes
    masked: no
  changed_when: false
