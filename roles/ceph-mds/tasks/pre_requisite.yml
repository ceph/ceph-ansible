---
# Deploy Ceph metadata server(s)

- name: copy mds bootstrap key
  copy: >
    src=fetch/{{ fsid }}/var/lib/ceph/bootstrap-mds/{{ cluster }}.keyring
    dest=/var/lib/ceph/bootstrap-mds/{{ cluster }}.keyring
    owner=root
    group=root
    mode=600
  when: cephx

- name: create mds directory
  file: >
    path=/var/lib/ceph/mds/{{ cluster }}-{{ ansible_hostname }}
    state=directory
    owner=root
    group=root
    mode=0644
  when: cephx

- name: create mds keyring
  command: >
    ceph --cluster {{ cluster }} --name client.bootstrap-mds --keyring /var/lib/ceph/bootstrap-mds/{{ cluster }}.keyring auth get-or-create mds.{{ ansible_hostname }} osd 'allow rwx' mds 'allow' mon 'allow profile mds' -o /var/lib/ceph/mds/{{ cluster }}-{{ ansible_hostname }}/keyring
    creates=/var/lib/ceph/mds/{{ cluster }}-{{ ansible_hostname }}/keyring
  changed_when: false
  when: cephx

- name: set mds key permissions
  file: >
    path=/var/lib/ceph/mds/{{ cluster }}-{{ ansible_hostname }}/keyring
    mode=0600
    owner=root
    group=root
  when: cephx

- name: activate metadata server with upstart
  file: >
    path=/var/lib/ceph/mds/{{ cluster }}-{{ ansible_hostname }}/{{ item }}
    state=touch
    owner=root
    group=root
    mode=0600
  with_items:
    - done
    - upstart
  changed_when: false
  when: ansible_distribution == "Ubuntu"

- name: activate metadata server with sysvinit
  file: >
    path=/var/lib/ceph/mds/{{ cluster }}-{{ ansible_hostname }}/{{ item }}
    state=touch
    owner=root
    group=root
    mode=0600
  with_items:
    - done
    - sysvinit
  changed_when: false
  when: ansible_distribution != "Ubuntu"

- name: start and add that the metadata service to the init sequence (ubuntu)
  service: >
    name=ceph-mds
    state=started
    enabled=yes
    args="id={{ ansible_hostname }}"
  changed_when: false
  when: ansible_distribution == "Ubuntu"

- name: start and add that the metadata service to the init sequence
  service: >
    name=ceph
    state=started
    enabled=yes
    args=mds
  changed_when: false
  when: ansible_distribution != "Ubuntu"
